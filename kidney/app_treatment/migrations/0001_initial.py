# Generated by Django 5.2 on 2025-05-13 01:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_appointment', '0024_assignedprovider_assigned_provider_appointments_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('diagnosis', models.CharField(blank=True, max_length=100, null=True)),
                ('nephrologist', models.CharField(blank=True, max_length=100, null=True)),
                ('last_treatment_date', models.DateField(blank=True, null=True)),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='treatment', to='app_appointment.appointment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.CharField(blank=True, null=True)),
                ('weight_pre', models.FloatField(blank=True, null=True)),
                ('weight_post', models.FloatField(blank=True, null=True)),
                ('blood_pressure_pre', models.CharField(blank=True, null=True)),
                ('blood_pressure_post', models.CharField(blank=True, null=True)),
                ('pulse_pre', models.CharField(blank=True, null=True)),
                ('pulse_post', models.CharField(blank=True, null=True)),
                ('temp_pre', models.FloatField(blank=True, null=True)),
                ('temp_post', models.FloatField(blank=True, null=True)),
                ('respiratory_rate_pre', models.CharField(blank=True, null=True)),
                ('respiratory_rate_post', models.CharField(blank=True, null=True)),
                ('saturation_percentage_pre', models.CharField(blank=True, null=True)),
                ('saturation_percentage_post', models.CharField(blank=True, null=True)),
                ('rbs_pre', models.CharField(blank=True, null=True)),
                ('rbs_post', models.CharField(blank=True, null=True)),
                ('uf_time', models.CharField(blank=True, null=True)),
                ('uf_goal', models.FloatField(blank=True, null=True)),
                ('hepatitis_screening', models.CharField(blank=True, choices=[('Reactive', 'Reactive'), ('Non-Reactive', 'Non-Reactive')], null=True)),
                ('treatment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_prescription', to='app_treatment.treatment')),
            ],
        ),
        migrations.CreateModel(
            name='AccessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.JSONField(default=dict)),
                ('heparin', models.CharField(blank=True, null=True)),
                ('flushing', models.CharField(blank=True, null=True)),
                ('treatment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_access_type', to='app_treatment.treatment')),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dialysis_number', models.CharField(blank=True, null=True)),
                ('machine_number', models.CharField(blank=True, null=True)),
                ('treatment_hours', models.CharField(blank=True, null=True)),
                ('treatment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_details', to='app_treatment.treatment')),
            ],
        ),
    ]
